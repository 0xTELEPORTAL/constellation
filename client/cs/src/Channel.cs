// This file is autogenerated, with one per class.

using IntPtr = System.IntPtr;
using generated = Teleportal.Client.Generated.generated;
using RSharp;


namespace Teleportal.Client.Contract.Properties
{
    // partial class ToManaged
    // {
    //     public static unsafe Channels.{{class_ident}} f(OwnershipSemantics ownershipSemantics, Ptr<Channels.{{class_ident}}> ptr)
    //     {
    //         return new Channels.{{class_ident}}(ptr, ownershipSemantics);
    //     }
    // }
}

namespace Teleportal.Client.Contract.Properties.Channels
{
    public sealed class Channel_U8 : OpaqueWrapper<Channel_U8>
    {
        public Channel_U8(Ptr<Channel_U8> ptr, OwnershipSemantics ownershipSemantics) : base(ptr, ownershipSemantics)
        {
            if (ownershipSemantics == OwnershipSemantics.Owned)
            {
                throw new System.NotSupportedException("todo: Support owned channels");
            }
        }

        override protected void NativeDrop(Ptr<Channel_U8> ptr)
        {
            throw new System.NotSupportedException("todo: Support owned channels");
        }

        public int Keyframes
        {
            get
            {
                var rvec_ptr = generated.__Internal.TpClientContractPropertiesChannelsChannelU8Keyframes(base.Inner?.p ?? IntPtr.Zero);
                throw new System.NotImplementedException("todo");
            }
            set => throw new System.NotImplementedException("todo");
        }
    }

}
