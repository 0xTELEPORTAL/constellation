// This file will eventually be autogenerated, with one per class.

using IntPtr = System.IntPtr;
using generated = Client.generated;


namespace Teleportal.Client.Contract.Properties
{
    partial class ToManaged
    {
        public static unsafe Channels.Keyframe_U8 f(OwnershipSemantics ownershipSemantics, Ptr<Channels.Keyframe_U8> ptr)
        {
            return new Channels.Keyframe_U8(ptr, ownershipSemantics);
        }
    }
}

namespace Teleportal.Client.Contract.Properties.Channels
{

    public sealed class Keyframe_U8 : Wrapper<Keyframe_U8>
    {
        public Keyframe_U8(Ptr<Keyframe_U8> ptr, OwnershipSemantics ownershipSemantics) : base(ptr, ownershipSemantics) { }

        public unsafe Keyframe_U8(byte value, double time) : base(
            new Ptr<Keyframe_U8>(generated.__Internal.TpClientContractPropertiesChannelsKeyframeU8New(RSharp.RBox_U8.new_(value), time)),
            OwnershipSemantics.Owned
        )
        { }

        override protected void NativeDrop(Ptr<Keyframe_U8> ptr)
        {
            generated.__Internal.TpClientContractPropertiesChannelsKeyframeU8Drop(ptr.p);
        }

        public unsafe byte value
        {
            get
            {
                byte* result = generated.__Internal.TpClientContractPropertiesChannelsKeyframeU8Value(this.Ptr?.p ?? IntPtr.Zero);
                return ToManaged.f(OwnershipSemantics.SharedRef, result);
            }
        }

        public double time
        {
            get => generated.__Internal.TpClientContractPropertiesChannelsKeyframeU8Time(this.Ptr?.p ?? IntPtr.Zero);
        }
    }

}
