<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <LangVersion>9.0</LangVersion>

    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>enable</Nullable>

    <NoWarn>CS8629</NoWarn>

    <!-- This is our own property that determines the native library name. -->
    <TpNativePrefix>$(MSBuildThisFileDirectory)..\..\..\..\target\libunity_states</TpNativePrefix>
  </PropertyGroup>

  <!-- This automatically handles code generation needed by this library -->
  <Target Name="codegen" BeforeTargets="BeforeCompile" >
  <Message Text="Running code generators" Importance="high" />
    <Exec command="cargo run -p rsharp_codegen -- -f" />
    <ItemGroup>
      <Compile Include="generated\*.cs" KeepDuplicates="false"/>
    </ItemGroup>
  </Target>

  <!--
    What the fuck is this shit, I hate MSBuild.
    Taken from: https://github.com/dotnet/sdk/issues/10575

    Note: When using wildcards in the path, the build won't fail if the file is
    missing.
  -->
  <ItemGroup>
    <!-- Here, we use the previously defined property -->
    <NativeLibs Include="$(TpNativePrefix).so*" />
    <NativeLibs Include="$(TpNativePrefix).dylib*" />
    <NativeLibs Include="$(TpNativePrefix).dll*" />
    <NativeLibs Include="$(TpNativePrefix).a*" />

    <None Include="@(NativeLibs)">
      <!-- <Pack>true</Pack> -->
      <PackageCopyToOutput>true</PackageCopyToOutput>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <!-- <None Include="_._">
      <Pack>true</Pack>
      <PackagePath>lib/netstandard2.0</PackagePath>
    </None> -->
  </ItemGroup>
</Project>
