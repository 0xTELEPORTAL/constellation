// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using __CallingConvention = global::System.Runtime.InteropServices.CallingConvention;
using __IntPtr = global::System.IntPtr;

namespace unity_states
{
    public enum BASELINE_KIND : uint
    {
        /// <summary>.</summary>
        BASELINE_KIND_MAIN = 0,
        /// <summary>.</summary>
        BASELINE_KIND_FORK = 1
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>`&amp;'lt [T]` but with a guaranteed `#[repr(C)]` layout.</summary>
    /// <remarks>
    /// <para># C layout (for some given type T)</para>
    /// <para>```c</para>
    /// <para>typedef struct {</para>
    /// <para>// Cannot be NULL</para>
    /// <para>T * ptr;</para>
    /// <para>size_t len;</para>
    /// <para>} slice_T;</para>
    /// <para>```</para>
    /// <para># Nullable pointer?</para>
    /// <para>If you want to support the above typedef, but where the `ptr` field is</para>
    /// <para>allowed to be `NULL` (with the contents of `len` then being undefined)</para>
    /// <para>use the `Option&lt;&gt;slice_ptr&lt;&gt;_&gt; &gt;` type.</para>
    /// </remarks>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class BallStates
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.BallStates> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.BallStates>();

        protected bool __ownsNativeInstance;

        internal static BallStates __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new BallStates(native.ToPointer(), skipVTables);
        }

        internal static BallStates __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (BallStates)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static BallStates __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new BallStates(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private BallStates(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected BallStates(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdF32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdF32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdF32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdF32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdF32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdF32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdF32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdF32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdF32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdF32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdF32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdI16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdI16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdI16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdI16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdI16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdI16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdI16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdI16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdI16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdI16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdI16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdU64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdU64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdU64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdU64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdU64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdU64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdU64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdU64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdU64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdU64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdU64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class Baseline
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Baseline> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Baseline>();

        protected bool __ownsNativeInstance;

        internal static Baseline __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Baseline(native.ToPointer(), skipVTables);
        }

        internal static Baseline __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Baseline)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Baseline __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Baseline(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Baseline(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Baseline(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class BallContract
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.BallContract> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.BallContract>();

        protected bool __ownsNativeInstance;

        internal static BallContract __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new BallContract(native.ToPointer(), skipVTables);
        }

        internal static BallContract __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (BallContract)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static BallContract __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new BallContract(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private BallContract(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected BallContract(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractContractDataHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractContractDataHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractContractDataHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractContractDataHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractContractDataHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractContractDataHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractContractDataHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractContractDataHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractContractDataHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractContractDataHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractContractDataHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class MaxAlignT : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 32)]
        public partial struct __Internal
        {
            internal long __clang_max_align_nonce1;
            internal fixed byte __clang_max_align_nonce2[128];
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.MaxAlignT> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.MaxAlignT>();

        protected bool __ownsNativeInstance;

        internal static MaxAlignT __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new MaxAlignT(native.ToPointer(), skipVTables);
        }

        internal static MaxAlignT __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (MaxAlignT)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static MaxAlignT __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new MaxAlignT(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private MaxAlignT(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected MaxAlignT(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public long ClangMaxAlignNonce1
        {
            get
            {
                return ((__Internal*)__Instance)->__clang_max_align_nonce1;
            }

            set
            {
                ((__Internal*)__Instance)->__clang_max_align_nonce1 = value;
            }
        }
    }

    public unsafe partial class TpClientObjectObjectHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientObjectObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientObjectObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientObjectObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientObjectObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientObjectObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientObjectObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientObjectObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientObjectObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientObjectObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientObjectObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdContractDataHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdContractDataHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdContractDataHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdContractDataHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdContractDataHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdContractDataHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdContractDataHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdContractDataHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdContractDataHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdContractDataHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdContractDataHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdI8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdI8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdI8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdI8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdI8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdI8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdI8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdI8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdI8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdI8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdI8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeObjectHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelU64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelU64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelU64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelU64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelU64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelU64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelU64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelU64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelU64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelU64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelU64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeU64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeU64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeU64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeU64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeU64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeU64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeU64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeU64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeU64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeU64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeU64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleContractDataHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleContractDataHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleContractDataHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleContractDataHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleContractDataHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleContractDataHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleContractDataHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleContractDataHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleContractDataHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleContractDataHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleContractDataHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleU32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleU32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleU32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleU32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleU32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleU32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleU32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleU32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleU32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleU32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleU32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdU16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdU16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdU16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdU16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdU16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdU16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdU16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdU16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdU16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdU16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdU16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleU16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleU16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleU16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleU16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleU16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleU16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleU16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleU16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleU16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdU16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdU16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdU16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdU16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdU16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdU16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdU16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdU16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdU16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdU16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdU16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleU16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleU16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleU16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleU16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleU16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleU16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleU16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleU16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleU16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleU16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleU16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelU16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelU16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelU16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelU16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelU16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelU16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelU16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelU16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelU16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelU16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelU16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateU16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateU16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateU16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateU16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateU16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateU16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateU16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateU16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateU16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateU16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateU16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateI8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateI8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateI8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateI8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateI8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateI8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateI8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateI8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateI8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateI8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateI8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateU8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateU8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateU8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateU8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateU8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateU8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateU8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateU8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateU8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateU8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateU8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateF32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateF32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateF32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateF32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateF32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateF32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateF32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateF32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateF32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateF32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateF32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractExampleContract
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractExampleContract> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractExampleContract>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractExampleContract __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractExampleContract(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractExampleContract __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractExampleContract)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractExampleContract __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractExampleContract(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractExampleContract(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractExampleContract(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractExampleStates
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractExampleStates> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractExampleStates>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractExampleStates __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractExampleStates(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractExampleStates __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractExampleStates)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractExampleStates __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractExampleStates(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractExampleStates(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractExampleStates(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeU32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeU32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeU32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeU32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeU32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeU32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeU32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeU32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeU32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeU32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeU32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdI64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdI64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdI64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdI64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdI64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdI64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdI64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdI64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdI64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdI64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdI64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class Object
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Object> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Object>();

        protected bool __ownsNativeInstance;

        internal static Object __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Object(native.ToPointer(), skipVTables);
        }

        internal static Object __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Object)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Object __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Object(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Object(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Object(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractContractData
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractContractData> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractContractData>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractContractData __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractContractData(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractContractData __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractContractData)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractContractData __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractContractData(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractContractData(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractContractData(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleI8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleI8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleI8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleI8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleI8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleI8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleI8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleI8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleI8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdI8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdI8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdI8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdI8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdI8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdI8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdI8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdI8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdI8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdI8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdI8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleI8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleI8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleI8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleI8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleI8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleI8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleI8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleI8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleI8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleI8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleI8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelI8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelI8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelI8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelI8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelI8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelI8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelI8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelI8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelI8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelI8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelI8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeI8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeI8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeI8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeI8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeI8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeI8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeI8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeI8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeI8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeI8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeI8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeBool
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeBool> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeBool>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeBool __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeBool(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeBool __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeBool)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeBool __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeBool(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeBool(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeBool(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdContractDataHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdContractDataHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdContractDataHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdContractDataHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdContractDataHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdContractDataHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdContractDataHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdContractDataHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdContractDataHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdContractDataHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdContractDataHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdF32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdF32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdF32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdF32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdF32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdF32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdF32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdF32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdF32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdF32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdF32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleF32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleF32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleF32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleF32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleF32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleF32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleF32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleF32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleF32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleF32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleF32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleF32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleF32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleF32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleF32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleF32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleF32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleF32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleF32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleF32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleF32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleF32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelF32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelF32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelF32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelF32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelF32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelF32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelF32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelF32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelF32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelF32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelF32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdI16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdI16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdI16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdI16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdI16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdI16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdI16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdI16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdI16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdI16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdI16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdU32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdU32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdU32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdU32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdU32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdU32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdU32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdU32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdU32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdU32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdU32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelI16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelI16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelI16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelI16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelI16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelI16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelI16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelI16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelI16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelI16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelI16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeI16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeI16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeI16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeI16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeI16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeI16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeI16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeI16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeI16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeI16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeI16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeF32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeF32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeF32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeF32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeF32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeF32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeF32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeF32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeF32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeF32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeF32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdF64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdF64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdF64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdF64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdF64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdF64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdF64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdF64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdF64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdF64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdF64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeF64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeF64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeF64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeF64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeF64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeF64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeF64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeF64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeF64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeF64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeF64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateF64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateF64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateF64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateF64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateF64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateF64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateF64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateF64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateF64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateF64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateF64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdU8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdU8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdU8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdU8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdU8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdU8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdU8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdU8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdU8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdU8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdU8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleI16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleI16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleI16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleI16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleI16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleI16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleI16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleI16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleI16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleI16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleI16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdU8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdU8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdU8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdU8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdU8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdU8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdU8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdU8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdU8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdU8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdU8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleU8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleU8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleU8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleU8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleU8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleU8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleU8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleU8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleU8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleU8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleU8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleU8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleU8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleU8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleU8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleU8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleU8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleU8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleU8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleU8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelU8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelU8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelU8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelU8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelU8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelU8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelU8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelU8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelU8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelU8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelU8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdObjectHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleObjectHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdObjectHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleObjectHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelObjectHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateObjectHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdI32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdI32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdI32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdI32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdI32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdI32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdI32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdI32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdI32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdI32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdI32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleBool
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleBool> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleBool>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleBool __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleBool(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleBool __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleBool)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleBool __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleBool(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleBool(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleBool(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleI64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleI64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleI64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleI64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleI64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleI64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleI64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleI64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleI64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleI64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleI64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeU16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeU16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeU16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeU16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeU16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeU16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeU16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeU16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeU16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeU16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeU16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleU32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleU32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleU32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleU32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleU32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleU32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleU32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleU32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleU32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdU32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdU32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdU32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdU32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdU32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdU32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdU32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdU32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdU32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdU32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdU32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelU32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelU32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelU32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelU32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelU32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelU32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelU32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelU32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelU32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelU32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelU32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateU32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateU32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateU32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateU32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateU32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateU32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateU32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateU32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateU32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateU32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateU32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleContractDataHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleContractDataHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleContractDataHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleContractDataHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleContractDataHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleContractDataHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleContractDataHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleContractDataHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleContractDataHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleContractDataHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleContractDataHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelContractDataHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelContractDataHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelContractDataHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelContractDataHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelContractDataHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelContractDataHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelContractDataHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelContractDataHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelContractDataHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateContractDataHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateContractDataHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateContractDataHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateContractDataHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateContractDataHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateContractDataHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateContractDataHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateContractDataHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateContractDataHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeContractDataHandle
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeContractDataHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeContractDataHandle(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeContractDataHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeContractDataHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeContractDataHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeContractDataHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeContractDataHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeContractDataHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdU64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdU64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdU64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdU64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdU64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdU64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdU64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdU64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdU64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdU64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdU64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleU64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleU64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleU64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleU64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleU64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleU64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleU64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleU64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleU64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleU64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleU64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleU64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleU64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleU64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleU64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleU64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleU64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleU64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleU64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleU64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateU64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateU64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateU64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateU64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateU64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateU64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateU64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateU64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateU64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateU64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateU64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelI32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelI32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelI32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelI32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelI32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelI32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelI32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelI32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelI32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelI32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelI32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeI32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeI32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeI32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeI32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeI32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeI32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeI32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeI32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeI32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeI32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeI32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateI64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateI64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateI64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateI64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateI64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateI64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateI64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateI64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateI64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateI64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateI64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdBool
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdBool> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdBool>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdBool __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdBool(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdBool __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdBool)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdBool __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdBool(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdBool(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdBool(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeI64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeI64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeI64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeI64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeI64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeI64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeI64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeI64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeI64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeI64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeI64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleI32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleI32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleI32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleI32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleI32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleI32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleI32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleI32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleI32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleI32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleI32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateI32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateI32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateI32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateI32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateI32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateI32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateI32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateI32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateI32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateI32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateI32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdF64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdF64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdF64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdF64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdF64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdF64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdF64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdF64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdF64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdF64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdF64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractContractId
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractContractId> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractContractId>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractContractId __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractContractId(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractContractId __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractContractId)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractContractId __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractContractId(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractContractId(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractContractId(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateHandleF64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleF64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateHandleF64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateHandleF64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleF64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateHandleF64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateHandleF64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateHandleF64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateHandleF64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateHandleF64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateHandleF64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleI16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleI16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleI16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleI16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleI16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleI16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleI16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleI16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleI16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateI16
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateI16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateI16>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateI16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateI16(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateI16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateI16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateI16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateI16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateI16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateI16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelI64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelI64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelI64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelI64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelI64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelI64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelI64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelI64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelI64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelI64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelI64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleBool
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleBool> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleBool>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleBool __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleBool(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleBool __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleBool)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleBool __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleBool(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleBool(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleBool(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateIdBool
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdBool> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateIdBool>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateIdBool __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdBool(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateIdBool __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateIdBool)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateIdBool __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateIdBool(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateIdBool(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateIdBool(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelBool
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelBool> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelBool>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelBool __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelBool(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelBool __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelBool)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelBool __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelBool(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelBool(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelBool(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesStatesStateBool
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateBool> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesStatesStateBool>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesStatesStateBool __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateBool(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesStatesStateBool __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesStatesStateBool)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesStatesStateBool __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesStatesStateBool(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesStatesStateBool(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesStatesStateBool(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleF64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleF64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleF64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleF64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleF64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleF64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleF64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleF64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleF64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleF64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleF64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelF64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelF64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelF64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelF64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelF64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelF64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelF64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelF64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelF64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelF64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelF64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdI64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdI64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdI64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdI64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdI64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdI64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdI64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdI64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdI64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdI64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdI64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleI64
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI64>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleI64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleI64(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleI64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleI64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleI64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleI64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleI64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleI64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelIdI32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdI32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelIdI32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelIdI32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdI32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelIdI32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelIdI32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelIdI32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelIdI32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelIdI32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelIdI32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsChannelHandleI32
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI32>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsChannelHandleI32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleI32(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsChannelHandleI32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsChannelHandleI32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsChannelHandleI32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsChannelHandleI32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsChannelHandleI32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsChannelHandleI32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class TpClientContractPropertiesChannelsKeyframeU8
    {
        public partial struct __Internal
        {
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeU8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractPropertiesChannelsKeyframeU8>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractPropertiesChannelsKeyframeU8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeU8(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractPropertiesChannelsKeyframeU8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractPropertiesChannelsKeyframeU8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractPropertiesChannelsKeyframeU8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractPropertiesChannelsKeyframeU8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractPropertiesChannelsKeyframeU8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractPropertiesChannelsKeyframeU8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }
    }

    public unsafe partial class FsidT : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 8)]
        public partial struct __Internal
        {
            internal fixed int __val[2];
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.FsidT> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.FsidT>();

        protected bool __ownsNativeInstance;

        internal static FsidT __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new FsidT(native.ToPointer(), skipVTables);
        }

        internal static FsidT __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (FsidT)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static FsidT __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new FsidT(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private FsidT(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected FsidT(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public int[] Val
        {
            get
            {
                return CppSharp.Runtime.MarshalUtil.GetArray<int>(((__Internal*)__Instance)->__val, 2);
            }

            set
            {
                if (value != null)
                {
                    for (int i = 0; i < 2; i++)
                        ((__Internal*)__Instance)->__val[i] = value[i];
                }
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeObjectHandle : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN68Vec_tp_client__contract__properties__channels__Keyframe_ObjectHandleC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeObjectHandle()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeObjectHandle(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU64_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN63Vec_tp_client__contract__properties__channels__Keyframe_U64_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU64_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU64_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU64_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU64_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU64_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU64_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU64_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU64_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU64_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU64_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU64.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN69Vec_tp_client__contract__properties__channels__Keyframe_U64_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU64.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU64 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN59Vec_tp_client__contract__properties__channels__Keyframe_U64C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU64(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU64()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU64(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU64.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU32 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN59Vec_tp_client__contract__properties__channels__Keyframe_U32C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU32(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU32()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU32(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU32.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI8_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN62Vec_tp_client__contract__properties__channels__Keyframe_I8_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI8_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI8_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI8_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI8_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI8_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI8_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI8_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI8_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI8_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI8_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI8.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN68Vec_tp_client__contract__properties__channels__Keyframe_I8_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI8.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI8 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN58Vec_tp_client__contract__properties__channels__Keyframe_I8C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI8(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI8()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI8(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI8.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeBool : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN60Vec_tp_client__contract__properties__channels__Keyframe_BoolC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeBool __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeBool(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeBool __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeBool)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeBool __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeBool(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeBool(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeBool(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeBool()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeBool(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeBool Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeBool.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI16_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN63Vec_tp_client__contract__properties__channels__Keyframe_I16_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI16_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI16_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI16_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI16_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI16_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI16_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI16_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI16_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI16_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI16_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI16.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN69Vec_tp_client__contract__properties__channels__Keyframe_I16_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI16.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI16 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN59Vec_tp_client__contract__properties__channels__Keyframe_I16C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI16(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI16()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI16(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI16.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeF32 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN59Vec_tp_client__contract__properties__channels__Keyframe_F32C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeF32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF32(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeF32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeF32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeF32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF32()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF32(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF32.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeF64 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN59Vec_tp_client__contract__properties__channels__Keyframe_F64C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeF64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF64(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeF64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeF64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeF64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF64()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF64(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF64.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU16 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN59Vec_tp_client__contract__properties__channels__Keyframe_U16C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU16 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU16(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU16 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU16)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU16 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU16(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU16(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU16(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU16()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU16(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU16.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN74Vec_tp_client__contract__properties__channels__Keyframe_ContractDataHandleC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN78Vec_tp_client__contract__properties__channels__Keyframe_ContractDataHandle_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN84Vec_tp_client__contract__properties__channels__Keyframe_ContractDataHandle_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI32_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN63Vec_tp_client__contract__properties__channels__Keyframe_I32_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI32_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI32_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI32_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI32_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI32_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI32_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI32_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI32_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI32_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI32_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI32.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN69Vec_tp_client__contract__properties__channels__Keyframe_I32_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI32.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI32 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN59Vec_tp_client__contract__properties__channels__Keyframe_I32C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI32 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI32(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI32 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI32)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI32 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI32(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI32(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI32(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI32()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI32(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI32.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI64 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN59Vec_tp_client__contract__properties__channels__Keyframe_I64C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI64 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI64(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI64 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI64)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI64 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI64(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI64(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI64(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI64()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI64(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI64.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    public unsafe partial class TpClientContractContractIdVersion : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 6)]
        public partial struct __Internal
        {
            internal ushort major;
            internal ushort minor;
            internal ushort patch;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN39tp_client__contract__ContractId_VersionC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractContractIdVersion> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.TpClientContractContractIdVersion>();

        protected bool __ownsNativeInstance;

        internal static TpClientContractContractIdVersion __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new TpClientContractContractIdVersion(native.ToPointer(), skipVTables);
        }

        internal static TpClientContractContractIdVersion __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (TpClientContractContractIdVersion)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static TpClientContractContractIdVersion __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new TpClientContractContractIdVersion(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private TpClientContractContractIdVersion(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected TpClientContractContractIdVersion(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public TpClientContractContractIdVersion()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.TpClientContractContractIdVersion.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public TpClientContractContractIdVersion(global::unity_states.TpClientContractContractIdVersion _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.TpClientContractContractIdVersion.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.TpClientContractContractIdVersion.__Internal*) __Instance) = *((global::unity_states.TpClientContractContractIdVersion.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public ushort Major
        {
            get
            {
                return ((__Internal*)__Instance)->major;
            }

            set
            {
                ((__Internal*)__Instance)->major = value;
            }
        }

        public ushort Minor
        {
            get
            {
                return ((__Internal*)__Instance)->minor;
            }

            set
            {
                ((__Internal*)__Instance)->minor = value;
            }
        }

        public ushort Patch
        {
            get
            {
                return ((__Internal*)__Instance)->patch;
            }

            set
            {
                ((__Internal*)__Instance)->patch = value;
            }
        }
    }

    /// <summary>`&amp;'lt [T]` but with a guaranteed `#[repr(C)]` layout.</summary>
    /// <remarks>
    /// <para># C layout (for some given type T)</para>
    /// <para>```c</para>
    /// <para>typedef struct {</para>
    /// <para>// Cannot be NULL</para>
    /// <para>T * ptr;</para>
    /// <para>size_t len;</para>
    /// <para>} slice_T;</para>
    /// <para>```</para>
    /// <para># Nullable pointer?</para>
    /// <para>If you want to support the above typedef, but where the `ptr` field is</para>
    /// <para>allowed to be `NULL` (with the contents of `len` then being undefined)</para>
    /// <para>use the `Option&lt;&gt;slice_ptr&lt;&gt;_&gt; &gt;` type.</para>
    /// </remarks>
    public unsafe partial class SliceRefUint8 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 16)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN15slice_ref_uint8C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.SliceRefUint8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.SliceRefUint8>();

        protected bool __ownsNativeInstance;

        internal static SliceRefUint8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new SliceRefUint8(native.ToPointer(), skipVTables);
        }

        internal static SliceRefUint8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (SliceRefUint8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static SliceRefUint8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new SliceRefUint8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private SliceRefUint8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected SliceRefUint8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public SliceRefUint8()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.SliceRefUint8.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public SliceRefUint8(global::unity_states.SliceRefUint8 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.SliceRefUint8.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.SliceRefUint8.__Internal*) __Instance) = *((global::unity_states.SliceRefUint8.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public byte* Ptr
        {
            get
            {
                return (byte*) ((__Internal*)__Instance)->ptr;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_objectObjectHandle : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN35Vec_tp_client__object__ObjectHandleC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_objectObjectHandle> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_objectObjectHandle>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_objectObjectHandle __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_objectObjectHandle(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_objectObjectHandle __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_objectObjectHandle)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_objectObjectHandle __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_objectObjectHandle(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_objectObjectHandle(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_objectObjectHandle(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_objectObjectHandle()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_objectObjectHandle.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_objectObjectHandle(global::unity_states.Vec_tp_client_objectObjectHandle _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_objectObjectHandle.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_objectObjectHandle.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_objectObjectHandle.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientObjectObjectHandle Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientObjectObjectHandle.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI64_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN63Vec_tp_client__contract__properties__channels__Keyframe_I64_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI64_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI64_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI64_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI64_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI64_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI64_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI64_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI64_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI64_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI64_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI64.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN69Vec_tp_client__contract__properties__channels__Keyframe_I64_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI64.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU32_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN63Vec_tp_client__contract__properties__channels__Keyframe_U32_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU32_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU32_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU32_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU32_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU32_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU32_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU32_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU32_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU32_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU32_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU32.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN69Vec_tp_client__contract__properties__channels__Keyframe_U32_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU32.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeBool_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN64Vec_tp_client__contract__properties__channels__Keyframe_Bool_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeBool_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeBool_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeBool_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeBool_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeBool_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeBool_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeBool_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeBool_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeBool_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeBool_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeBool Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeBool.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN70Vec_tp_client__contract__properties__channels__Keyframe_Bool_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeBool Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeBool.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeF32_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN63Vec_tp_client__contract__properties__channels__Keyframe_F32_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeF32_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF32_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF32_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeF32_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF32_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF32_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeF32_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeF32_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF32_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF32_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF32.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN69Vec_tp_client__contract__properties__channels__Keyframe_F32_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF32.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeF64_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN63Vec_tp_client__contract__properties__channels__Keyframe_F64_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeF64_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF64_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF64_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeF64_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF64_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF64_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeF64_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeF64_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF64_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF64_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF64.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN69Vec_tp_client__contract__properties__channels__Keyframe_F64_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF64.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN72Vec_tp_client__contract__properties__channels__Keyframe_ObjectHandle_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN78Vec_tp_client__contract__properties__channels__Keyframe_ObjectHandle_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU16_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN63Vec_tp_client__contract__properties__channels__Keyframe_U16_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU16_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU16_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU16_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU16_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU16_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU16_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU16_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU16_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU16_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU16_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU16.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN69Vec_tp_client__contract__properties__channels__Keyframe_U16_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU16.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU8_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN62Vec_tp_client__contract__properties__channels__Keyframe_U8_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU8_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU8_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU8_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU8_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU8_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU8_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU8_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU8_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU8_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU8_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU8.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                var __value = value is null ? __IntPtr.Zero : value.__Instance;
                ((__Internal*)__Instance)->ptr = new __IntPtr(&__value);
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN68Vec_tp_client__contract__properties__channels__Keyframe_U8_const_ptrC2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU8.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    /// <summary>Same as [`Vec&gt;`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout</summary>
    public unsafe partial class Vec_tp_client_contract_properties_channelsKeyframeU8 : IDisposable
    {
        [StructLayout(LayoutKind.Sequential, Size = 24)]
        public partial struct __Internal
        {
            internal __IntPtr ptr;
            internal ulong len;
            internal ulong cap;

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "_ZN58Vec_tp_client__contract__properties__channels__Keyframe_U8C2ERKS_", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void cctor(__IntPtr __instance, __IntPtr _0);
        }

        public __IntPtr __Instance { get; protected set; }

        internal static readonly global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8> NativeToManagedMap = new global::System.Collections.Concurrent.ConcurrentDictionary<IntPtr, global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8>();

        protected bool __ownsNativeInstance;

        internal static Vec_tp_client_contract_properties_channelsKeyframeU8 __CreateInstance(__IntPtr native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU8(native.ToPointer(), skipVTables);
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU8 __GetOrCreateInstance(__IntPtr native, bool saveInstance = false, bool skipVTables = false)
        {
            if (native == __IntPtr.Zero)
                return null;
            if (NativeToManagedMap.TryGetValue(native, out var managed))
                return (Vec_tp_client_contract_properties_channelsKeyframeU8)managed;
            var result = __CreateInstance(native, skipVTables);
            if (saveInstance)
                NativeToManagedMap[native] = result;
            return result;
        }

        internal static Vec_tp_client_contract_properties_channelsKeyframeU8 __CreateInstance(__Internal native, bool skipVTables = false)
        {
            return new Vec_tp_client_contract_properties_channelsKeyframeU8(native, skipVTables);
        }

        private static void* __CopyValue(__Internal native)
        {
            var ret = Marshal.AllocHGlobal(sizeof(__Internal));
            *(__Internal*) ret = native;
            return ret.ToPointer();
        }

        private Vec_tp_client_contract_properties_channelsKeyframeU8(__Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected Vec_tp_client_contract_properties_channelsKeyframeU8(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new __IntPtr(native);
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU8()
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        public Vec_tp_client_contract_properties_channelsKeyframeU8(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8 _0)
        {
            __Instance = Marshal.AllocHGlobal(sizeof(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__Internal));
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__Internal*) __Instance) = *((global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true, callNativeDtor : __ownsNativeInstance );
        }

        partial void DisposePartial(bool disposing);

        internal protected virtual void Dispose(bool disposing, bool callNativeDtor )
        {
            if (__Instance == IntPtr.Zero)
                return;
            NativeToManagedMap.TryRemove(__Instance, out _);
            DisposePartial(disposing);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
            __Instance = IntPtr.Zero;
        }

        public global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 Ptr
        {
            get
            {
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU8.__GetOrCreateInstance(((__Internal*)__Instance)->ptr, false);
                return __result0;
            }

            set
            {
                ((__Internal*)__Instance)->ptr = value is null ? __IntPtr.Zero : value.__Instance;
            }
        }

        public ulong Len
        {
            get
            {
                return ((__Internal*)__Instance)->len;
            }

            set
            {
                ((__Internal*)__Instance)->len = value;
            }
        }

        public ulong Cap
        {
            get
            {
                return ((__Internal*)__Instance)->cap;
            }

            set
            {
                ((__Internal*)__Instance)->cap = value;
            }
        }
    }

    public unsafe partial class generated
    {
        public partial struct __Internal
        {
            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__pos_x", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_pos_x(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__pos_y", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_pos_y(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__pos_z", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_pos_z(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__euler_x", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_euler_x(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__euler_y", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_euler_y(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__euler_z", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_euler_z(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__scale_x", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_scale_x(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__scale_y", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_scale_y(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__scale_z", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_scale_z(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallStates__color", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallStates_color(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallContract__register", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallContract_register(__IntPtr baseline);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallContract__unregister", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void BallContract_unregister(__IntPtr baseline, __IntPtr contract);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallContract__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void BallContract_drop(__IntPtr contract);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallContract__handle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallContract_handle(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallContract__states", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallContract_states(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallContract__object_create", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr BallContract_object_create(__IntPtr baseline, __IntPtr contract, float pos_x, float pos_y, float pos_z, short euler_x, short euler_y, short euler_z, float scale_x, float scale_y, float scale_z, ulong color);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "BallContract__object_remove", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void BallContract_object_remove(__IntPtr baseline, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_ContractDataHandle__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdContractDataHandle_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_I8__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdI8_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeObjectHandle__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeObjectHandlePush(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeObjectHandle__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeObjectHandleNew(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeObjectHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeObjectHandleDrop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeObjectHandle__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeObjectHandleGet(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeObjectHandle__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeObjectHandleSet(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_ObjectHandle__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeObjectHandleTime(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_ObjectHandle__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeObjectHandleValue(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_ObjectHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeObjectHandleDrop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_ObjectHandle__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeObjectHandleNew(__IntPtr value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U64__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr.__Internal TpClientContractPropertiesChannelsChannelU64KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U64__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr.__Internal TpClientContractPropertiesChannelsChannelU64Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelU64Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelU64New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_ContractDataHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleContractDataHandleDrop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_U32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleU32Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_U64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdU64Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_U64__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdU64Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_U16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelU16(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_U16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateU16(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_U16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutU16(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_U16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelU16(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_U16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutU16(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_U16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateU16(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I8__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateI8ValueSet(__IntPtr state, sbyte* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I8__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* TpClientContractPropertiesStatesStateI8Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateI8Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateI8New(sbyte* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U8__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateU8ValueSet(__IntPtr state, byte* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U8__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte* TpClientContractPropertiesStatesStateU8Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateU8Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateU8New(byte* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_F32__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateF32ValueSet(__IntPtr state, float* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_F32__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float* TpClientContractPropertiesStatesStateF32Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_F32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateF32Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_F32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateF32New(float* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleContract__object_remove", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractExampleContractObjectRemove(__IntPtr baseline, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleContract__object_create", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractExampleContractObjectCreate(__IntPtr contract, __IntPtr baseline, byte u8_0, byte u8_1, sbyte i8_0, sbyte i8_1, float f32_0, float f32_1);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleContract__states", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractExampleContractStates(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleContract__handle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractExampleContractHandle(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleContract__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractExampleContractDrop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU32__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU32Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU32New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU32Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU32__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeU32Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU32__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU32Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U32__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeU32Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U32__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* TpClientContractPropertiesChannelsKeyframeU32Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeU32Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeU32New(uint* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_I64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdI64Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_I64__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdI64Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__register_contract___example", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineRegisterContractExample(__IntPtr baseline);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__object_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineObjectMut(__IntPtr baseline, __IntPtr handle);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__object", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineObject(__IntPtr baseline, __IntPtr handle);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__contract_data", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineContractData(__IntPtr b, __IntPtr contract);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__kind", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte TpClientBaselineBaselineKind(__IntPtr b);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientBaselineBaselineDrop(__IntPtr baseline);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineNew(byte kind);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_I8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelI8(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_I8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateI8(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_I8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutI8(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_I8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelI8(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_I8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutI8(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_I8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateI8(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I8__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr.__Internal TpClientContractPropertiesChannelsChannelI8KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I8__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr.__Internal TpClientContractPropertiesChannelsChannelI8Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelI8Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelI8New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeBool__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeBoolPush(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeBool__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeBoolNew(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeBool__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeBoolDrop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeBool__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeBoolGet(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeBool__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeBoolSet(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_Bool__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeBoolTime(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_Bool__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern bool* TpClientContractPropertiesChannelsKeyframeBoolValue(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_Bool__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeBoolDrop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_Bool__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeBoolNew(bool* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_ContractDataHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdContractDataHandleDrop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_ContractDataHandle__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdContractDataHandleContract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI8__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI8Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI8New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI8Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI8__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeI8Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI8__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI8Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I8__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeI8Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I8__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* TpClientContractPropertiesChannelsKeyframeI8Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeI8Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeI8New(sbyte* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_F32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelF32(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_F32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateF32(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_F32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutF32(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_F32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelF32(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_F32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutF32(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_F32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateF32(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_I16__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdI16_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_U32__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdU32_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I16__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr.__Internal TpClientContractPropertiesChannelsChannelI16KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I16__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr.__Internal TpClientContractPropertiesChannelsChannelI16Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelI16Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelI16New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__object__ObjectHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientObjectObjectHandleDrop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF32__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeF32Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeF32New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeF32Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF32__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeF32Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF32__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeF32Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_F32__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeF32Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_F32__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float* TpClientContractPropertiesChannelsKeyframeF32Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_F32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeF32Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_F32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeF32New(float* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_F64__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdF64_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF64__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeF64Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeF64New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeF64Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF64__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeF64Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeF64__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeF64Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_F64__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeF64Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_F64__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double* TpClientContractPropertiesChannelsKeyframeF64Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_F64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeF64Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_F64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeF64New(double* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_F64__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateF64ValueSet(__IntPtr state, double* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_F64__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double* TpClientContractPropertiesStatesStateF64Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_F64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateF64Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_F64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateF64New(double* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleStates__f32_1", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractExampleStatesF32_1(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleStates__f32_0", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractExampleStatesF32_0(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleStates__i8_1", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractExampleStatesI8_1(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleStates__i8_0", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractExampleStatesI8_0(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleStates__u8_1", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractExampleStatesU8_1(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ExampleStates__u8_0", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractExampleStatesU8_0(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_I16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleI16Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_I8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleI8Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_U8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelU8(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_U8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateU8(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_U8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutU8(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_U8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelU8(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_U8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutU8(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_U8", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateU8(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_ObjectHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelObjectHandle(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_ObjectHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateObjectHandle(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_ObjectHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutObjectHandle(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_ObjectHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelObjectHandle(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_ObjectHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutObjectHandle(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_ObjectHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateObjectHandle(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_I32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdI32Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_I32__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdI32Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_Bool__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleBoolDrop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_U8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleU8Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_I64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleI64Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU16__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU16Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU16New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU16Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU16__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeU16Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU16__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU16Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U16__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeU16Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U16__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort* TpClientContractPropertiesChannelsKeyframeU16Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeU16Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeU16New(ushort* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_U32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelU32(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_U32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateU32(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_U32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutU32(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_U32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelU32(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_U32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutU32(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_U32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateU32(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_ContractDataHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelContractDataHandle(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_ContractDataHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateContractDataHandle(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_ContractDataHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutContractDataHandle(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_ContractDataHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelContractDataHandle(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_ContractDataHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutContractDataHandle(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_ContractDataHandle", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateContractDataHandle(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeContractDataHandle__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeContractDataHandlePush(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeContractDataHandle__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleNew(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeContractDataHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleDrop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeContractDataHandle__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleGet(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeContractDataHandle__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleSet(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_ContractDataHandle__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeContractDataHandleTime(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_ContractDataHandle__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeContractDataHandleValue(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_ContractDataHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeContractDataHandleDrop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_ContractDataHandle__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeContractDataHandleNew(__IntPtr value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_ContractDataHandle__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr.__Internal TpClientContractPropertiesChannelsChannelContractDataHandleKeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_ContractDataHandle__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr.__Internal TpClientContractPropertiesChannelsChannelContractDataHandleKeyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_ContractDataHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelContractDataHandleDrop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_ContractDataHandle__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelContractDataHandleNew(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_I16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdI16Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_I16__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdI16Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_U64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelU64(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_U64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateU64(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_U64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutU64(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_U64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelU64(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_U64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutU64(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_U64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateU64(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I32__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr.__Internal TpClientContractPropertiesChannelsChannelI32KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I32__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr.__Internal TpClientContractPropertiesChannelsChannelI32Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelI32Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelI32New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_U32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdU32Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_U32__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdU32Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_ObjectHandle__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateObjectHandleValueSet(__IntPtr state, __IntPtr new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_ObjectHandle__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateObjectHandleValue(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_ObjectHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateObjectHandleDrop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_ObjectHandle__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateObjectHandleNew(__IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I64__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateI64ValueSet(__IntPtr state, long* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I64__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern long* TpClientContractPropertiesStatesStateI64Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateI64Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateI64New(long* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_F32__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdF32_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_Bool__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdBool_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI64__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI64Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI64New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI64Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI64__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeI64Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI64__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI64Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I64__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeI64Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I64__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern long* TpClientContractPropertiesChannelsKeyframeI64Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeI64Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeI64New(long* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_F32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleF32Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_I32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleI32Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I32__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateI32ValueSet(__IntPtr state, int* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I32__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int* TpClientContractPropertiesStatesStateI32Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateI32Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateI32New(int* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_F64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdF64Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_F64__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdF64Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ContractId__version", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.TpClientContractContractIdVersion.__Internal tp_client__contract__ContractId__version(__IntPtr cid);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ContractId__name", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.SliceRefUint8.__Internal TpClientContractContractIdName(__IntPtr cid);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ContractData__objects", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_objectObjectHandle.__Internal TpClientContractContractDataObjects(__IntPtr cd);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ContractData__id", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractContractDataId(__IntPtr cd);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U16__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateU16ValueSet(__IntPtr state, ushort* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U16__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort* TpClientContractPropertiesStatesStateU16Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateU16Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateU16New(ushort* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_F64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleF64Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_U16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleU16Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_I16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelI16(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_I16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateI16(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_I16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutI16(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_I16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelI16(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_I16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutI16(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_I16", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateI16(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I64__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr.__Internal TpClientContractPropertiesChannelsChannelI64KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I64__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr.__Internal TpClientContractPropertiesChannelsChannelI64Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelI64Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_I64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelI64New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_Bool", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelBool(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_Bool", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateBool(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_Bool", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutBool(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_Bool", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelBool(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_Bool", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutBool(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_Bool", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateBool(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_F64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelF64(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_F64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateF64(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_F64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutF64(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_F64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelF64(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_F64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutF64(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_F64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateF64(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U32__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr.__Internal TpClientContractPropertiesChannelsChannelU32KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U32__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr.__Internal TpClientContractPropertiesChannelsChannelU32Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelU32Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelU32New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI32__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI32Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI32New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI32Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI32__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeI32Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI32__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI32Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I32__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeI32Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I32__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int* TpClientContractPropertiesChannelsKeyframeI32Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeI32Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeI32New(int* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_I64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelI64(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_I64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateI64(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_I64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutI64(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_I64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelI64(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_I64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutI64(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_I64", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateI64(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_U16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdU16Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_U16__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdU16Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_ObjectHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdObjectHandleDrop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_ObjectHandle__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdObjectHandleContract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_F32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdF32Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_F32__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdF32Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU64__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU64Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU64New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU64Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU64__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeU64Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU64__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU64Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U64__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeU64Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U64__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ulong* TpClientContractPropertiesChannelsKeyframeU64Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeU64Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeU64New(ulong* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_channel_I32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindChannelI32(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__bind_state_I32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineBindStateI32(__IntPtr b, __IntPtr id, __IntPtr obj);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_mut_I32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelMutI32(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__channel_I32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineChannelI32(__IntPtr b, __IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_mut_I32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateMutI32(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__baseline__Baseline__state_I32", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientBaselineBaselineStateI32(__IntPtr b, __IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_I64__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdI64_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_U64__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdU64_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_ContractDataHandle__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateContractDataHandleValueSet(__IntPtr state, __IntPtr new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_ContractDataHandle__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateContractDataHandleValue(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_ContractDataHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateContractDataHandleDrop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_ContractDataHandle__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateContractDataHandleNew(__IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_Bool__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr.__Internal TpClientContractPropertiesChannelsChannelBoolKeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_Bool__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr.__Internal TpClientContractPropertiesChannelsChannelBoolKeyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_Bool__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelBoolDrop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_Bool__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelBoolNew(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_U8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdU8Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_U8__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdU8Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_F32__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr.__Internal TpClientContractPropertiesChannelsChannelF32KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_F32__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr.__Internal TpClientContractPropertiesChannelsChannelF32Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_F32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelF32Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_F32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelF32New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U64__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateU64ValueSet(__IntPtr state, ulong* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U64__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ulong* TpClientContractPropertiesStatesStateU64Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateU64Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateU64New(ulong* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_I32__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdI32_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_U16__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdU16_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_F64__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr.__Internal TpClientContractPropertiesChannelsChannelF64KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_F64__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr.__Internal TpClientContractPropertiesChannelsChannelF64Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_F64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelF64Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_F64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelF64New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_ObjectHandle__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr.__Internal TpClientContractPropertiesChannelsChannelObjectHandleKeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_ObjectHandle__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr.__Internal TpClientContractPropertiesChannelsChannelObjectHandleKeyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_ObjectHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelObjectHandleDrop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_ObjectHandle__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelObjectHandleNew(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I16__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateI16ValueSet(__IntPtr state, short* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I16__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern short* TpClientContractPropertiesStatesStateI16Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateI16Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_I16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateI16New(short* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U16__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr.__Internal TpClientContractPropertiesChannelsChannelU16KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U16__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr.__Internal TpClientContractPropertiesChannelsChannelU16Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelU16Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelU16New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_ObjectHandle__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdObjectHandle_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "ChannelId_U8__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr ChannelIdU8_contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U32__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateU32ValueSet(__IntPtr state, uint* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U32__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* TpClientContractPropertiesStatesStateU32Value(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateU32Drop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_U32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateU32New(uint* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_ObjectHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleObjectHandleDrop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateHandle_U64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateHandleU64Drop(__IntPtr h);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__ContractDataHandle__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractContractDataHandleDrop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_Bool__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdBoolDrop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_Bool__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdBoolContract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_Bool__value_set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateBoolValueSet(__IntPtr state, bool* new_value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_Bool__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern bool* TpClientContractPropertiesStatesStateBoolValue(__IntPtr state);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_Bool__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateBoolDrop(__IntPtr s);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__State_Bool__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateBoolNew(bool* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U8__keyframes_mut", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr.__Internal TpClientContractPropertiesChannelsChannelU8KeyframesMut(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U8__keyframes", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr.__Internal TpClientContractPropertiesChannelsChannelU8Keyframes(__IntPtr chan);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsChannelU8Drop(__IntPtr c);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Channel_U8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsChannelU8New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__Internal v);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_I8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesStatesStateIdI8Drop(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__states__StateId_I8__contract", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesStatesStateIdI8Contract(__IntPtr id);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU8__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU8Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU8New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU8Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU8__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeU8Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeU8__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeU8Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U8__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeU8Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U8__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte* TpClientContractPropertiesChannelsKeyframeU8Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeU8Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_U8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeU8New(byte* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI16__push", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI16Push(__IntPtr vec, __IntPtr item);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI16New(__IntPtr @return);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI16Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__Internal vec);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI16__get", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsRVecKeyframeI16Get(__IntPtr vec, ulong idx);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__RVec_KeyframeI16__set", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsRVecKeyframeI16Set(__IntPtr vec, ulong idx, __IntPtr value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I16__time", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double TpClientContractPropertiesChannelsKeyframeI16Time(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I16__value", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern short* TpClientContractPropertiesChannelsKeyframeI16Value(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void TpClientContractPropertiesChannelsKeyframeI16Drop(__IntPtr kf);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "tp_client__contract__properties__channels__Keyframe_I16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern __IntPtr TpClientContractPropertiesChannelsKeyframeI16New(short* value, double time);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_U8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern byte* RsharpBoxU8New(byte value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_U8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxU8Drop(byte* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_U16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ushort* RsharpBoxU16New(ushort value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_U16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxU16Drop(ushort* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_U32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern uint* RsharpBoxU32New(uint value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_U32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxU32Drop(uint* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_U64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern ulong* RsharpBoxU64New(ulong value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_U64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxU64Drop(ulong* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_I8__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern sbyte* RsharpBoxI8New(sbyte value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_I8__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxI8Drop(sbyte* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_I16__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern short* RsharpBoxI16New(short value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_I16__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxI16Drop(short* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_I32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern int* RsharpBoxI32New(int value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_I32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxI32Drop(int* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_I64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern long* RsharpBoxI64New(long value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_I64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxI64Drop(long* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_Bool__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern bool* RsharpBoxBoolNew(bool value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_Bool__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxBoolDrop(bool* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_F32__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern float* RsharpBoxF32New(float value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_F32__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxF32Drop(float* value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_F64__new", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern double* RsharpBoxF64New(double value);

            [SuppressUnmanagedCodeSecurity, DllImport("unity_states", EntryPoint = "rsharp__Box_F64__drop", CallingConvention = __CallingConvention.Cdecl)]
            internal static extern void RsharpBoxF64Drop(double* value);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdF32 BallStates_pos_x(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_pos_x(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdF32 BallStates_pos_y(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_pos_y(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdF32 BallStates_pos_z(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_pos_z(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdI16 BallStates_euler_x(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_euler_x(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdI16 BallStates_euler_y(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_euler_y(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdI16 BallStates_euler_z(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_euler_z(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdF32 BallStates_scale_x(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_scale_x(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdF32 BallStates_scale_y(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_scale_y(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdF32 BallStates_scale_z(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_scale_z(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdU64 BallStates_color(global::unity_states.BallStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.BallStates_color(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdU64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.BallContract BallContract_register(global::unity_states.Baseline baseline)
        {
            var __arg0 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            var __ret = __Internal.BallContract_register(__arg0);
            var __result0 = global::unity_states.BallContract.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void BallContract_unregister(global::unity_states.Baseline baseline, global::unity_states.TpClientContractContractDataHandle contract)
        {
            var __arg0 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            var __arg1 = contract is null ? __IntPtr.Zero : contract.__Instance;
            __Internal.BallContract_unregister(__arg0, __arg1);
        }

        public static void BallContract_drop(global::unity_states.BallContract contract)
        {
            var __arg0 = contract is null ? __IntPtr.Zero : contract.__Instance;
            __Internal.BallContract_drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle BallContract_handle(global::unity_states.BallContract c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            var __ret = __Internal.BallContract_handle(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.BallStates BallContract_states(global::unity_states.BallContract c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            var __ret = __Internal.BallContract_states(__arg0);
            var __result0 = global::unity_states.BallStates.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientObjectObjectHandle BallContract_object_create(global::unity_states.Baseline baseline, global::unity_states.BallContract contract, float pos_x, float pos_y, float pos_z, short euler_x, short euler_y, short euler_z, float scale_x, float scale_y, float scale_z, ulong color)
        {
            var __arg0 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            var __arg1 = contract is null ? __IntPtr.Zero : contract.__Instance;
            var __ret = __Internal.BallContract_object_create(__arg0, __arg1, pos_x, pos_y, pos_z, euler_x, euler_y, euler_z, scale_x, scale_y, scale_z, color);
            var __result0 = global::unity_states.TpClientObjectObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void BallContract_object_remove(global::unity_states.Baseline baseline, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            var __arg1 = obj is null ? __IntPtr.Zero : obj.__Instance;
            __Internal.BallContract_object_remove(__arg0, __arg1);
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdContractDataHandle_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdContractDataHandle id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdContractDataHandle_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdI8_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdI8 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdI8_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeObjectHandlePush(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeObjectHandlePush(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle TpClientContractPropertiesChannelsRVecKeyframeObjectHandleNew()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeObjectHandleNew(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeObjectHandleDrop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeObjectHandleDrop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle TpClientContractPropertiesChannelsRVecKeyframeObjectHandleGet(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeObjectHandleGet(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeObjectHandleSet(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeObjectHandleSet(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeObjectHandleTime(global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeObjectHandleTime(__arg0);
            return __ret;
        }

        public static global::unity_states.TpClientObjectObjectHandle TpClientContractPropertiesChannelsKeyframeObjectHandleValue(global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeObjectHandleValue(__arg0);
            var __result0 = global::unity_states.TpClientObjectObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsKeyframeObjectHandleDrop(global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeObjectHandleDrop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle TpClientContractPropertiesChannelsKeyframeObjectHandleNew(global::unity_states.TpClientObjectObjectHandle value, double time)
        {
            var __arg0 = value is null ? __IntPtr.Zero : value.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeObjectHandleNew(__arg0, time);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr TpClientContractPropertiesChannelsChannelU64KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelU64 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU64KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr TpClientContractPropertiesChannelsChannelU64Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelU64 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU64Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelU64Drop(global::unity_states.TpClientContractPropertiesChannelsChannelU64 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelU64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU64 TpClientContractPropertiesChannelsChannelU64New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU64New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateHandleContractDataHandleDrop(global::unity_states.TpClientContractPropertiesStatesStateHandleContractDataHandle h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleContractDataHandleDrop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateHandleU32Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleU32 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleU32Drop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateIdU64Drop(global::unity_states.TpClientContractPropertiesStatesStateIdU64 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdU64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdU64Contract(global::unity_states.TpClientContractPropertiesStatesStateIdU64 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdU64Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleU16 TpClientBaselineBaselineBindChannelU16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdU16 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelU16(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleU16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleU16 TpClientBaselineBaselineBindStateU16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdU16 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateU16(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleU16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU16 TpClientBaselineBaselineChannelMutU16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU16 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutU16(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU16 TpClientBaselineBaselineChannelU16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU16 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelU16(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU16 TpClientBaselineBaselineStateMutU16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleU16 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutU16(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU16 TpClientBaselineBaselineStateU16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleU16 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateU16(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateI8ValueSet(global::unity_states.TpClientContractPropertiesStatesStateI8 state, sbyte* new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            __Internal.TpClientContractPropertiesStatesStateI8ValueSet(__arg0, new_value);
        }

        public static sbyte* TpClientContractPropertiesStatesStateI8Value(global::unity_states.TpClientContractPropertiesStatesStateI8 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateI8Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateI8Drop(global::unity_states.TpClientContractPropertiesStatesStateI8 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateI8Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI8 TpClientContractPropertiesStatesStateI8New(sbyte* value)
        {
            var __ret = __Internal.TpClientContractPropertiesStatesStateI8New(value);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateU8ValueSet(global::unity_states.TpClientContractPropertiesStatesStateU8 state, byte* new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            __Internal.TpClientContractPropertiesStatesStateU8ValueSet(__arg0, new_value);
        }

        public static byte* TpClientContractPropertiesStatesStateU8Value(global::unity_states.TpClientContractPropertiesStatesStateU8 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateU8Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateU8Drop(global::unity_states.TpClientContractPropertiesStatesStateU8 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateU8Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU8 TpClientContractPropertiesStatesStateU8New(byte* value)
        {
            var __ret = __Internal.TpClientContractPropertiesStatesStateU8New(value);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateF32ValueSet(global::unity_states.TpClientContractPropertiesStatesStateF32 state, ref float new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            fixed (float* __new_value1 = &new_value)
            {
                var __arg1 = __new_value1;
                __Internal.TpClientContractPropertiesStatesStateF32ValueSet(__arg0, __arg1);
            }
        }

        public static float* TpClientContractPropertiesStatesStateF32Value(global::unity_states.TpClientContractPropertiesStatesStateF32 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateF32Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateF32Drop(global::unity_states.TpClientContractPropertiesStatesStateF32 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateF32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateF32 TpClientContractPropertiesStatesStateF32New(ref float value)
        {
            fixed (float* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesStatesStateF32New(__arg0);
                var __result0 = global::unity_states.TpClientContractPropertiesStatesStateF32.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static void TpClientContractExampleContractObjectRemove(global::unity_states.Baseline baseline, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            var __arg1 = obj is null ? __IntPtr.Zero : obj.__Instance;
            __Internal.TpClientContractExampleContractObjectRemove(__arg0, __arg1);
        }

        public static global::unity_states.TpClientObjectObjectHandle TpClientContractExampleContractObjectCreate(global::unity_states.TpClientContractExampleContract contract, global::unity_states.Baseline baseline, byte u8_0, byte u8_1, sbyte i8_0, sbyte i8_1, float f32_0, float f32_1)
        {
            var __arg0 = contract is null ? __IntPtr.Zero : contract.__Instance;
            var __arg1 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            var __ret = __Internal.TpClientContractExampleContractObjectCreate(__arg0, __arg1, u8_0, u8_1, i8_0, i8_1, f32_0, f32_1);
            var __result0 = global::unity_states.TpClientObjectObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractExampleStates TpClientContractExampleContractStates(global::unity_states.TpClientContractExampleContract c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            var __ret = __Internal.TpClientContractExampleContractStates(__arg0);
            var __result0 = global::unity_states.TpClientContractExampleStates.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractExampleContractHandle(global::unity_states.TpClientContractExampleContract c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            var __ret = __Internal.TpClientContractExampleContractHandle(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractExampleContractDrop(global::unity_states.TpClientContractExampleContract c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractExampleContractDrop(__arg0);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU32Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU32Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32 TpClientContractPropertiesChannelsRVecKeyframeU32New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU32New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU32Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU32Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 TpClientContractPropertiesChannelsRVecKeyframeU32Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeU32Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU32Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU32Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeU32Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU32Time(__arg0);
            return __ret;
        }

        public static uint* TpClientContractPropertiesChannelsKeyframeU32Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU32Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeU32Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeU32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeU32 TpClientContractPropertiesChannelsKeyframeU32New(ref uint value, double time)
        {
            fixed (uint* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU32New(__arg0, time);
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU32.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static void TpClientContractPropertiesStatesStateIdI64Drop(global::unity_states.TpClientContractPropertiesStatesStateIdI64 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdI64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdI64Contract(global::unity_states.TpClientContractPropertiesStatesStateIdI64 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdI64Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractExampleContract TpClientBaselineBaselineRegisterContractExample(global::unity_states.Baseline baseline)
        {
            var __arg0 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineRegisterContractExample(__arg0);
            var __result0 = global::unity_states.TpClientContractExampleContract.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Object TpClientBaselineBaselineObjectMut(global::unity_states.Baseline baseline, global::unity_states.TpClientObjectObjectHandle handle)
        {
            var __arg0 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            var __arg1 = handle is null ? __IntPtr.Zero : handle.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineObjectMut(__arg0, __arg1);
            var __result0 = global::unity_states.Object.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Object TpClientBaselineBaselineObject(global::unity_states.Baseline baseline, global::unity_states.TpClientObjectObjectHandle handle)
        {
            var __arg0 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            var __arg1 = handle is null ? __IntPtr.Zero : handle.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineObject(__arg0, __arg1);
            var __result0 = global::unity_states.Object.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractData TpClientBaselineBaselineContractData(global::unity_states.Baseline b, global::unity_states.TpClientContractContractDataHandle contract)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = contract is null ? __IntPtr.Zero : contract.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineContractData(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractContractData.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static byte TpClientBaselineBaselineKind(global::unity_states.Baseline b)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineKind(__arg0);
            return __ret;
        }

        public static void TpClientBaselineBaselineDrop(global::unity_states.Baseline baseline)
        {
            var __arg0 = baseline is null ? __IntPtr.Zero : baseline.__Instance;
            __Internal.TpClientBaselineBaselineDrop(__arg0);
        }

        public static global::unity_states.Baseline TpClientBaselineBaselineNew(byte kind)
        {
            var __ret = __Internal.TpClientBaselineBaselineNew(kind);
            var __result0 = global::unity_states.Baseline.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleI8 TpClientBaselineBaselineBindChannelI8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdI8 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelI8(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleI8 TpClientBaselineBaselineBindStateI8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdI8 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateI8(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI8 TpClientBaselineBaselineChannelMutI8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI8 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutI8(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI8 TpClientBaselineBaselineChannelI8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI8 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelI8(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI8 TpClientBaselineBaselineStateMutI8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleI8 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutI8(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI8 TpClientBaselineBaselineStateI8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleI8 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateI8(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr TpClientContractPropertiesChannelsChannelI8KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelI8 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI8KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr TpClientContractPropertiesChannelsChannelI8Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelI8 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI8Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelI8Drop(global::unity_states.TpClientContractPropertiesChannelsChannelI8 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelI8Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI8 TpClientContractPropertiesChannelsChannelI8New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI8New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeBoolPush(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeBool item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeBoolPush(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool TpClientContractPropertiesChannelsRVecKeyframeBoolNew()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeBoolNew(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeBoolDrop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeBoolDrop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeBool TpClientContractPropertiesChannelsRVecKeyframeBoolGet(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeBoolGet(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeBool.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeBoolSet(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeBool value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeBoolSet(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeBoolTime(global::unity_states.TpClientContractPropertiesChannelsKeyframeBool kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeBoolTime(__arg0);
            return __ret;
        }

        public static bool* TpClientContractPropertiesChannelsKeyframeBoolValue(global::unity_states.TpClientContractPropertiesChannelsKeyframeBool kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeBoolValue(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeBoolDrop(global::unity_states.TpClientContractPropertiesChannelsKeyframeBool kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeBoolDrop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeBool TpClientContractPropertiesChannelsKeyframeBoolNew(ref bool value, double time)
        {
            fixed (bool* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeBoolNew(__arg0, time);
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeBool.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static void TpClientContractPropertiesStatesStateIdContractDataHandleDrop(global::unity_states.TpClientContractPropertiesStatesStateIdContractDataHandle id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdContractDataHandleDrop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdContractDataHandleContract(global::unity_states.TpClientContractPropertiesStatesStateIdContractDataHandle id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdContractDataHandleContract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI8Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI8Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8 TpClientContractPropertiesChannelsRVecKeyframeI8New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI8New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI8Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI8Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 TpClientContractPropertiesChannelsRVecKeyframeI8Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeI8Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI8Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI8 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI8Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeI8Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI8Time(__arg0);
            return __ret;
        }

        public static sbyte* TpClientContractPropertiesChannelsKeyframeI8Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI8Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeI8Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeI8Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeI8 TpClientContractPropertiesChannelsKeyframeI8New(sbyte* value, double time)
        {
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI8New(value, time);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleF32 TpClientBaselineBaselineBindChannelF32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdF32 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelF32(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleF32 TpClientBaselineBaselineBindStateF32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdF32 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateF32(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelF32 TpClientBaselineBaselineChannelMutF32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleF32 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutF32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelF32 TpClientBaselineBaselineChannelF32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleF32 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelF32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateF32 TpClientBaselineBaselineStateMutF32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleF32 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutF32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateF32 TpClientBaselineBaselineStateF32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleF32 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateF32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdI16_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdI16 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdI16_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdU32_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdU32 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdU32_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr TpClientContractPropertiesChannelsChannelI16KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelI16 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI16KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr TpClientContractPropertiesChannelsChannelI16Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelI16 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI16Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelI16Drop(global::unity_states.TpClientContractPropertiesChannelsChannelI16 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelI16Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI16 TpClientContractPropertiesChannelsChannelI16New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI16New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientObjectObjectHandleDrop(global::unity_states.TpClientObjectObjectHandle c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientObjectObjectHandleDrop(__arg0);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeF32Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeF32Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32 TpClientContractPropertiesChannelsRVecKeyframeF32New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeF32New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeF32Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeF32Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 TpClientContractPropertiesChannelsRVecKeyframeF32Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeF32Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeF32Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeF32Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeF32Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeF32Time(__arg0);
            return __ret;
        }

        public static float* TpClientContractPropertiesChannelsKeyframeF32Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeF32Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeF32Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeF32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeF32 TpClientContractPropertiesChannelsKeyframeF32New(ref float value, double time)
        {
            fixed (float* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeF32New(__arg0, time);
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF32.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdF64_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdF64 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdF64_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeF64Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeF64Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64 TpClientContractPropertiesChannelsRVecKeyframeF64New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeF64New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeF64Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeF64Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 TpClientContractPropertiesChannelsRVecKeyframeF64Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeF64Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeF64Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeF64Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeF64Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeF64Time(__arg0);
            return __ret;
        }

        public static double* TpClientContractPropertiesChannelsKeyframeF64Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeF64Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeF64Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeF64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeF64 TpClientContractPropertiesChannelsKeyframeF64New(ref double value, double time)
        {
            fixed (double* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeF64New(__arg0, time);
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeF64.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static void TpClientContractPropertiesStatesStateF64ValueSet(global::unity_states.TpClientContractPropertiesStatesStateF64 state, ref double new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            fixed (double* __new_value1 = &new_value)
            {
                var __arg1 = __new_value1;
                __Internal.TpClientContractPropertiesStatesStateF64ValueSet(__arg0, __arg1);
            }
        }

        public static double* TpClientContractPropertiesStatesStateF64Value(global::unity_states.TpClientContractPropertiesStatesStateF64 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateF64Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateF64Drop(global::unity_states.TpClientContractPropertiesStatesStateF64 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateF64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateF64 TpClientContractPropertiesStatesStateF64New(ref double value)
        {
            fixed (double* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesStatesStateF64New(__arg0);
                var __result0 = global::unity_states.TpClientContractPropertiesStatesStateF64.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdF32 TpClientContractExampleStatesF32_1(global::unity_states.TpClientContractExampleStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.TpClientContractExampleStatesF32_1(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdF32 TpClientContractExampleStatesF32_0(global::unity_states.TpClientContractExampleStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.TpClientContractExampleStatesF32_0(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdI8 TpClientContractExampleStatesI8_1(global::unity_states.TpClientContractExampleStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.TpClientContractExampleStatesI8_1(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdI8 TpClientContractExampleStatesI8_0(global::unity_states.TpClientContractExampleStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.TpClientContractExampleStatesI8_0(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdI8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdU8 TpClientContractExampleStatesU8_1(global::unity_states.TpClientContractExampleStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.TpClientContractExampleStatesU8_1(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateIdU8 TpClientContractExampleStatesU8_0(global::unity_states.TpClientContractExampleStates s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            var __ret = __Internal.TpClientContractExampleStatesU8_0(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateIdU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateHandleI16Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleI16 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleI16Drop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateHandleI8Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleI8 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleI8Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleU8 TpClientBaselineBaselineBindChannelU8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdU8 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelU8(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleU8 TpClientBaselineBaselineBindStateU8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdU8 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateU8(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU8 TpClientBaselineBaselineChannelMutU8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU8 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutU8(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU8 TpClientBaselineBaselineChannelU8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU8 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelU8(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU8 TpClientBaselineBaselineStateMutU8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleU8 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutU8(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU8 TpClientBaselineBaselineStateU8(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleU8 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateU8(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleObjectHandle TpClientBaselineBaselineBindChannelObjectHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdObjectHandle id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelObjectHandle(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleObjectHandle TpClientBaselineBaselineBindStateObjectHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdObjectHandle id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateObjectHandle(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle TpClientBaselineBaselineChannelMutObjectHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleObjectHandle chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutObjectHandle(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle TpClientBaselineBaselineChannelObjectHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleObjectHandle chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelObjectHandle(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateObjectHandle TpClientBaselineBaselineStateMutObjectHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleObjectHandle state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutObjectHandle(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateObjectHandle TpClientBaselineBaselineStateObjectHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleObjectHandle state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateObjectHandle(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateIdI32Drop(global::unity_states.TpClientContractPropertiesStatesStateIdI32 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdI32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdI32Contract(global::unity_states.TpClientContractPropertiesStatesStateIdI32 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdI32Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateHandleBoolDrop(global::unity_states.TpClientContractPropertiesStatesStateHandleBool h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleBoolDrop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateHandleU8Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleU8 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleU8Drop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateHandleI64Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleI64 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleI64Drop(__arg0);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU16Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU16Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16 TpClientContractPropertiesChannelsRVecKeyframeU16New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU16New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU16Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU16Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 TpClientContractPropertiesChannelsRVecKeyframeU16Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeU16Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU16Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU16Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeU16Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU16Time(__arg0);
            return __ret;
        }

        public static ushort* TpClientContractPropertiesChannelsKeyframeU16Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU16Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeU16Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeU16Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeU16 TpClientContractPropertiesChannelsKeyframeU16New(ref ushort value, double time)
        {
            fixed (ushort* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU16New(__arg0, time);
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU16.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleU32 TpClientBaselineBaselineBindChannelU32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdU32 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelU32(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleU32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleU32 TpClientBaselineBaselineBindStateU32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdU32 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateU32(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleU32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU32 TpClientBaselineBaselineChannelMutU32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU32 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutU32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU32 TpClientBaselineBaselineChannelU32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU32 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelU32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU32 TpClientBaselineBaselineStateMutU32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleU32 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutU32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU32 TpClientBaselineBaselineStateU32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleU32 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateU32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleContractDataHandle TpClientBaselineBaselineBindChannelContractDataHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdContractDataHandle id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelContractDataHandle(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleContractDataHandle TpClientBaselineBaselineBindStateContractDataHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdContractDataHandle id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateContractDataHandle(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle TpClientBaselineBaselineChannelMutContractDataHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleContractDataHandle chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutContractDataHandle(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle TpClientBaselineBaselineChannelContractDataHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleContractDataHandle chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelContractDataHandle(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle TpClientBaselineBaselineStateMutContractDataHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleContractDataHandle state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutContractDataHandle(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle TpClientBaselineBaselineStateContractDataHandle(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleContractDataHandle state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateContractDataHandle(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeContractDataHandlePush(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeContractDataHandlePush(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleNew()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleNew(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleDrop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleDrop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleGet(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleGet(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleSet(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeContractDataHandleSet(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeContractDataHandleTime(global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeContractDataHandleTime(__arg0);
            return __ret;
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesChannelsKeyframeContractDataHandleValue(global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeContractDataHandleValue(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsKeyframeContractDataHandleDrop(global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeContractDataHandleDrop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle TpClientContractPropertiesChannelsKeyframeContractDataHandleNew(global::unity_states.TpClientContractContractDataHandle value, double time)
        {
            var __arg0 = value is null ? __IntPtr.Zero : value.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeContractDataHandleNew(__arg0, time);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr TpClientContractPropertiesChannelsChannelContractDataHandleKeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelContractDataHandleKeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr TpClientContractPropertiesChannelsChannelContractDataHandleKeyframes(global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelContractDataHandleKeyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelContractDataHandleDrop(global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelContractDataHandleDrop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle TpClientContractPropertiesChannelsChannelContractDataHandleNew(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelContractDataHandleNew(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeContractDataHandle.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateIdI16Drop(global::unity_states.TpClientContractPropertiesStatesStateIdI16 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdI16Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdI16Contract(global::unity_states.TpClientContractPropertiesStatesStateIdI16 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdI16Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleU64 TpClientBaselineBaselineBindChannelU64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdU64 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelU64(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleU64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleU64 TpClientBaselineBaselineBindStateU64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdU64 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateU64(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleU64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU64 TpClientBaselineBaselineChannelMutU64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU64 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutU64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU64 TpClientBaselineBaselineChannelU64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleU64 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelU64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU64 TpClientBaselineBaselineStateMutU64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleU64 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutU64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU64 TpClientBaselineBaselineStateU64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleU64 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateU64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr TpClientContractPropertiesChannelsChannelI32KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelI32 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI32KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr TpClientContractPropertiesChannelsChannelI32Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelI32 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI32Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelI32Drop(global::unity_states.TpClientContractPropertiesChannelsChannelI32 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelI32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI32 TpClientContractPropertiesChannelsChannelI32New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI32New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateIdU32Drop(global::unity_states.TpClientContractPropertiesStatesStateIdU32 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdU32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdU32Contract(global::unity_states.TpClientContractPropertiesStatesStateIdU32 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdU32Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateObjectHandleValueSet(global::unity_states.TpClientContractPropertiesStatesStateObjectHandle state, global::unity_states.TpClientObjectObjectHandle new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __arg1 = new_value is null ? __IntPtr.Zero : new_value.__Instance;
            __Internal.TpClientContractPropertiesStatesStateObjectHandleValueSet(__arg0, __arg1);
        }

        public static global::unity_states.TpClientObjectObjectHandle TpClientContractPropertiesStatesStateObjectHandleValue(global::unity_states.TpClientContractPropertiesStatesStateObjectHandle state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateObjectHandleValue(__arg0);
            var __result0 = global::unity_states.TpClientObjectObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateObjectHandleDrop(global::unity_states.TpClientContractPropertiesStatesStateObjectHandle s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateObjectHandleDrop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateObjectHandle TpClientContractPropertiesStatesStateObjectHandleNew(global::unity_states.TpClientObjectObjectHandle value)
        {
            var __arg0 = value is null ? __IntPtr.Zero : value.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateObjectHandleNew(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateI64ValueSet(global::unity_states.TpClientContractPropertiesStatesStateI64 state, ref long new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            fixed (long* __new_value1 = &new_value)
            {
                var __arg1 = __new_value1;
                __Internal.TpClientContractPropertiesStatesStateI64ValueSet(__arg0, __arg1);
            }
        }

        public static long* TpClientContractPropertiesStatesStateI64Value(global::unity_states.TpClientContractPropertiesStatesStateI64 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateI64Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateI64Drop(global::unity_states.TpClientContractPropertiesStatesStateI64 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateI64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI64 TpClientContractPropertiesStatesStateI64New(ref long value)
        {
            fixed (long* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesStatesStateI64New(__arg0);
                var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI64.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdF32_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdF32 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdF32_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdBool_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdBool id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdBool_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI64Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI64Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64 TpClientContractPropertiesChannelsRVecKeyframeI64New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI64New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI64Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI64Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 TpClientContractPropertiesChannelsRVecKeyframeI64Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeI64Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI64Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI64Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeI64Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI64Time(__arg0);
            return __ret;
        }

        public static long* TpClientContractPropertiesChannelsKeyframeI64Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI64Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeI64Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeI64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeI64 TpClientContractPropertiesChannelsKeyframeI64New(ref long value, double time)
        {
            fixed (long* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI64New(__arg0, time);
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI64.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static void TpClientContractPropertiesStatesStateHandleF32Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleF32 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleF32Drop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateHandleI32Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleI32 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleI32Drop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateI32ValueSet(global::unity_states.TpClientContractPropertiesStatesStateI32 state, ref int new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            fixed (int* __new_value1 = &new_value)
            {
                var __arg1 = __new_value1;
                __Internal.TpClientContractPropertiesStatesStateI32ValueSet(__arg0, __arg1);
            }
        }

        public static int* TpClientContractPropertiesStatesStateI32Value(global::unity_states.TpClientContractPropertiesStatesStateI32 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateI32Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateI32Drop(global::unity_states.TpClientContractPropertiesStatesStateI32 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateI32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI32 TpClientContractPropertiesStatesStateI32New(ref int value)
        {
            fixed (int* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesStatesStateI32New(__arg0);
                var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI32.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static void TpClientContractPropertiesStatesStateIdF64Drop(global::unity_states.TpClientContractPropertiesStatesStateIdF64 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdF64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdF64Contract(global::unity_states.TpClientContractPropertiesStatesStateIdF64 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdF64Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractIdVersion tp_client__contract__ContractId__version(global::unity_states.TpClientContractContractId cid)
        {
            var __arg0 = cid is null ? __IntPtr.Zero : cid.__Instance;
            var __ret = __Internal.tp_client__contract__ContractId__version(__arg0);
            return global::unity_states.TpClientContractContractIdVersion.__CreateInstance(__ret);
        }

        public static global::unity_states.SliceRefUint8 TpClientContractContractIdName(global::unity_states.TpClientContractContractId cid)
        {
            var __arg0 = cid is null ? __IntPtr.Zero : cid.__Instance;
            var __ret = __Internal.TpClientContractContractIdName(__arg0);
            return global::unity_states.SliceRefUint8.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_objectObjectHandle TpClientContractContractDataObjects(global::unity_states.TpClientContractContractData cd)
        {
            var __arg0 = cd is null ? __IntPtr.Zero : cd.__Instance;
            var __ret = __Internal.TpClientContractContractDataObjects(__arg0);
            return global::unity_states.Vec_tp_client_objectObjectHandle.__CreateInstance(__ret);
        }

        public static global::unity_states.TpClientContractContractId TpClientContractContractDataId(global::unity_states.TpClientContractContractData cd)
        {
            var __arg0 = cd is null ? __IntPtr.Zero : cd.__Instance;
            var __ret = __Internal.TpClientContractContractDataId(__arg0);
            var __result0 = global::unity_states.TpClientContractContractId.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateU16ValueSet(global::unity_states.TpClientContractPropertiesStatesStateU16 state, ref ushort new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            fixed (ushort* __new_value1 = &new_value)
            {
                var __arg1 = __new_value1;
                __Internal.TpClientContractPropertiesStatesStateU16ValueSet(__arg0, __arg1);
            }
        }

        public static ushort* TpClientContractPropertiesStatesStateU16Value(global::unity_states.TpClientContractPropertiesStatesStateU16 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateU16Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateU16Drop(global::unity_states.TpClientContractPropertiesStatesStateU16 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateU16Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU16 TpClientContractPropertiesStatesStateU16New(ref ushort value)
        {
            fixed (ushort* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesStatesStateU16New(__arg0);
                var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU16.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static void TpClientContractPropertiesStatesStateHandleF64Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleF64 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleF64Drop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateHandleU16Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleU16 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleU16Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleI16 TpClientBaselineBaselineBindChannelI16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdI16 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelI16(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleI16 TpClientBaselineBaselineBindStateI16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdI16 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateI16(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI16 TpClientBaselineBaselineChannelMutI16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI16 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutI16(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI16 TpClientBaselineBaselineChannelI16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI16 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelI16(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI16 TpClientBaselineBaselineStateMutI16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleI16 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutI16(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI16 TpClientBaselineBaselineStateI16(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleI16 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateI16(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr TpClientContractPropertiesChannelsChannelI64KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelI64 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI64KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr TpClientContractPropertiesChannelsChannelI64Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelI64 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI64Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelI64Drop(global::unity_states.TpClientContractPropertiesChannelsChannelI64 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelI64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI64 TpClientContractPropertiesChannelsChannelI64New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelI64New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI64.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleBool TpClientBaselineBaselineBindChannelBool(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdBool id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelBool(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleBool.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleBool TpClientBaselineBaselineBindStateBool(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdBool id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateBool(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleBool.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelBool TpClientBaselineBaselineChannelMutBool(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleBool chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutBool(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelBool.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelBool TpClientBaselineBaselineChannelBool(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleBool chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelBool(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelBool.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateBool TpClientBaselineBaselineStateMutBool(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleBool state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutBool(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateBool.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateBool TpClientBaselineBaselineStateBool(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleBool state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateBool(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateBool.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleF64 TpClientBaselineBaselineBindChannelF64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdF64 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelF64(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleF64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleF64 TpClientBaselineBaselineBindStateF64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdF64 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateF64(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleF64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelF64 TpClientBaselineBaselineChannelMutF64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleF64 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutF64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelF64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelF64 TpClientBaselineBaselineChannelF64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleF64 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelF64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelF64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateF64 TpClientBaselineBaselineStateMutF64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleF64 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutF64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateF64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateF64 TpClientBaselineBaselineStateF64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleF64 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateF64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateF64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr TpClientContractPropertiesChannelsChannelU32KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelU32 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU32KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr TpClientContractPropertiesChannelsChannelU32Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelU32 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU32Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelU32Drop(global::unity_states.TpClientContractPropertiesChannelsChannelU32 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelU32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU32 TpClientContractPropertiesChannelsChannelU32New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU32New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU32.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI32Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI32Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32 TpClientContractPropertiesChannelsRVecKeyframeI32New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI32New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI32Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI32Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 TpClientContractPropertiesChannelsRVecKeyframeI32Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeI32Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI32Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI32 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI32Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeI32Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI32Time(__arg0);
            return __ret;
        }

        public static int* TpClientContractPropertiesChannelsKeyframeI32Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI32Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeI32Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeI32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeI32 TpClientContractPropertiesChannelsKeyframeI32New(ref int value, double time)
        {
            fixed (int* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI32New(__arg0, time);
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI32.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleI64 TpClientBaselineBaselineBindChannelI64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdI64 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelI64(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleI64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleI64 TpClientBaselineBaselineBindStateI64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdI64 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateI64(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleI64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI64 TpClientBaselineBaselineChannelMutI64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI64 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutI64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI64 TpClientBaselineBaselineChannelI64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI64 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelI64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI64 TpClientBaselineBaselineStateMutI64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleI64 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutI64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI64 TpClientBaselineBaselineStateI64(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleI64 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateI64(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateIdU16Drop(global::unity_states.TpClientContractPropertiesStatesStateIdU16 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdU16Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdU16Contract(global::unity_states.TpClientContractPropertiesStatesStateIdU16 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdU16Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateIdObjectHandleDrop(global::unity_states.TpClientContractPropertiesStatesStateIdObjectHandle id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdObjectHandleDrop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdObjectHandleContract(global::unity_states.TpClientContractPropertiesStatesStateIdObjectHandle id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdObjectHandleContract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateIdF32Drop(global::unity_states.TpClientContractPropertiesStatesStateIdF32 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdF32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdF32Contract(global::unity_states.TpClientContractPropertiesStatesStateIdF32 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdF32Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU64Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU64Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64 TpClientContractPropertiesChannelsRVecKeyframeU64New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU64New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU64Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU64Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 TpClientContractPropertiesChannelsRVecKeyframeU64Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeU64Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU64Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU64 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU64Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeU64Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU64Time(__arg0);
            return __ret;
        }

        public static ulong* TpClientContractPropertiesChannelsKeyframeU64Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU64Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeU64Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeU64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeU64 TpClientContractPropertiesChannelsKeyframeU64New(ref ulong value, double time)
        {
            fixed (ulong* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU64New(__arg0, time);
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU64.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelHandleI32 TpClientBaselineBaselineBindChannelI32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelIdI32 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindChannelI32(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelHandleI32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateHandleI32 TpClientBaselineBaselineBindStateI32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateIdI32 id, global::unity_states.TpClientObjectObjectHandle obj)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = id is null ? __IntPtr.Zero : id.__Instance;
            var __arg2 = obj is null ? __IntPtr.Zero : obj.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineBindStateI32(__arg0, __arg1, __arg2);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateHandleI32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI32 TpClientBaselineBaselineChannelMutI32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI32 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelMutI32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelI32 TpClientBaselineBaselineChannelI32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesChannelsChannelHandleI32 chan)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineChannelI32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelI32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI32 TpClientBaselineBaselineStateMutI32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleI32 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateMutI32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI32 TpClientBaselineBaselineStateI32(global::unity_states.Baseline b, global::unity_states.TpClientContractPropertiesStatesStateHandleI32 state)
        {
            var __arg0 = b is null ? __IntPtr.Zero : b.__Instance;
            var __arg1 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientBaselineBaselineStateI32(__arg0, __arg1);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdI64_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdI64 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdI64_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdU64_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdU64 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdU64_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateContractDataHandleValueSet(global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle state, global::unity_states.TpClientContractContractDataHandle new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __arg1 = new_value is null ? __IntPtr.Zero : new_value.__Instance;
            __Internal.TpClientContractPropertiesStatesStateContractDataHandleValueSet(__arg0, __arg1);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateContractDataHandleValue(global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateContractDataHandleValue(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateContractDataHandleDrop(global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateContractDataHandleDrop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle TpClientContractPropertiesStatesStateContractDataHandleNew(global::unity_states.TpClientContractContractDataHandle value)
        {
            var __arg0 = value is null ? __IntPtr.Zero : value.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateContractDataHandleNew(__arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesStatesStateContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr TpClientContractPropertiesChannelsChannelBoolKeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelBool chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelBoolKeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr TpClientContractPropertiesChannelsChannelBoolKeyframes(global::unity_states.TpClientContractPropertiesChannelsChannelBool chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelBoolKeyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelBoolDrop(global::unity_states.TpClientContractPropertiesChannelsChannelBool c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelBoolDrop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelBool TpClientContractPropertiesChannelsChannelBoolNew(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelBoolNew(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeBool.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelBool.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateIdU8Drop(global::unity_states.TpClientContractPropertiesStatesStateIdU8 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdU8Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdU8Contract(global::unity_states.TpClientContractPropertiesStatesStateIdU8 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdU8Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr TpClientContractPropertiesChannelsChannelF32KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelF32 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelF32KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr TpClientContractPropertiesChannelsChannelF32Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelF32 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelF32Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelF32Drop(global::unity_states.TpClientContractPropertiesChannelsChannelF32 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelF32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelF32 TpClientContractPropertiesChannelsChannelF32New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelF32New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF32.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelF32.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateU64ValueSet(global::unity_states.TpClientContractPropertiesStatesStateU64 state, ref ulong new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            fixed (ulong* __new_value1 = &new_value)
            {
                var __arg1 = __new_value1;
                __Internal.TpClientContractPropertiesStatesStateU64ValueSet(__arg0, __arg1);
            }
        }

        public static ulong* TpClientContractPropertiesStatesStateU64Value(global::unity_states.TpClientContractPropertiesStatesStateU64 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateU64Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateU64Drop(global::unity_states.TpClientContractPropertiesStatesStateU64 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateU64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU64 TpClientContractPropertiesStatesStateU64New(ref ulong value)
        {
            fixed (ulong* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesStatesStateU64New(__arg0);
                var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU64.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdI32_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdI32 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdI32_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdU16_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdU16 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdU16_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr TpClientContractPropertiesChannelsChannelF64KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelF64 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelF64KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr TpClientContractPropertiesChannelsChannelF64Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelF64 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelF64Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelF64Drop(global::unity_states.TpClientContractPropertiesChannelsChannelF64 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelF64Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelF64 TpClientContractPropertiesChannelsChannelF64New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelF64New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeF64.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelF64.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr TpClientContractPropertiesChannelsChannelObjectHandleKeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelObjectHandleKeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr TpClientContractPropertiesChannelsChannelObjectHandleKeyframes(global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelObjectHandleKeyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelObjectHandleDrop(global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelObjectHandleDrop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle TpClientContractPropertiesChannelsChannelObjectHandleNew(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelObjectHandleNew(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeObjectHandle.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelObjectHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateI16ValueSet(global::unity_states.TpClientContractPropertiesStatesStateI16 state, ref short new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            fixed (short* __new_value1 = &new_value)
            {
                var __arg1 = __new_value1;
                __Internal.TpClientContractPropertiesStatesStateI16ValueSet(__arg0, __arg1);
            }
        }

        public static short* TpClientContractPropertiesStatesStateI16Value(global::unity_states.TpClientContractPropertiesStatesStateI16 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateI16Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateI16Drop(global::unity_states.TpClientContractPropertiesStatesStateI16 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateI16Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateI16 TpClientContractPropertiesStatesStateI16New(ref short value)
        {
            fixed (short* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesStatesStateI16New(__arg0);
                var __result0 = global::unity_states.TpClientContractPropertiesStatesStateI16.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr TpClientContractPropertiesChannelsChannelU16KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelU16 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU16KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr TpClientContractPropertiesChannelsChannelU16Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelU16 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU16Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelU16Drop(global::unity_states.TpClientContractPropertiesChannelsChannelU16 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelU16Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU16 TpClientContractPropertiesChannelsChannelU16New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU16New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU16.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdObjectHandle_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdObjectHandle id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdObjectHandle_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static global::unity_states.TpClientContractContractDataHandle ChannelIdU8_contract(global::unity_states.TpClientContractPropertiesChannelsChannelIdU8 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.ChannelIdU8_contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateU32ValueSet(global::unity_states.TpClientContractPropertiesStatesStateU32 state, ref uint new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            fixed (uint* __new_value1 = &new_value)
            {
                var __arg1 = __new_value1;
                __Internal.TpClientContractPropertiesStatesStateU32ValueSet(__arg0, __arg1);
            }
        }

        public static uint* TpClientContractPropertiesStatesStateU32Value(global::unity_states.TpClientContractPropertiesStatesStateU32 state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateU32Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateU32Drop(global::unity_states.TpClientContractPropertiesStatesStateU32 s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateU32Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateU32 TpClientContractPropertiesStatesStateU32New(ref uint value)
        {
            fixed (uint* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesStatesStateU32New(__arg0);
                var __result0 = global::unity_states.TpClientContractPropertiesStatesStateU32.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static void TpClientContractPropertiesStatesStateHandleObjectHandleDrop(global::unity_states.TpClientContractPropertiesStatesStateHandleObjectHandle h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleObjectHandleDrop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateHandleU64Drop(global::unity_states.TpClientContractPropertiesStatesStateHandleU64 h)
        {
            var __arg0 = h is null ? __IntPtr.Zero : h.__Instance;
            __Internal.TpClientContractPropertiesStatesStateHandleU64Drop(__arg0);
        }

        public static void TpClientContractContractDataHandleDrop(global::unity_states.TpClientContractContractDataHandle c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractContractDataHandleDrop(__arg0);
        }

        public static void TpClientContractPropertiesStatesStateIdBoolDrop(global::unity_states.TpClientContractPropertiesStatesStateIdBool id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdBoolDrop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdBoolContract(global::unity_states.TpClientContractPropertiesStatesStateIdBool id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdBoolContract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateBoolValueSet(global::unity_states.TpClientContractPropertiesStatesStateBool state, ref bool new_value)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            fixed (bool* __new_value1 = &new_value)
            {
                var __arg1 = __new_value1;
                __Internal.TpClientContractPropertiesStatesStateBoolValueSet(__arg0, __arg1);
            }
        }

        public static bool* TpClientContractPropertiesStatesStateBoolValue(global::unity_states.TpClientContractPropertiesStatesStateBool state)
        {
            var __arg0 = state is null ? __IntPtr.Zero : state.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateBoolValue(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesStatesStateBoolDrop(global::unity_states.TpClientContractPropertiesStatesStateBool s)
        {
            var __arg0 = s is null ? __IntPtr.Zero : s.__Instance;
            __Internal.TpClientContractPropertiesStatesStateBoolDrop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesStatesStateBool TpClientContractPropertiesStatesStateBoolNew(ref bool value)
        {
            fixed (bool* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesStatesStateBoolNew(__arg0);
                var __result0 = global::unity_states.TpClientContractPropertiesStatesStateBool.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr TpClientContractPropertiesChannelsChannelU8KeyframesMut(global::unity_states.TpClientContractPropertiesChannelsChannelU8 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU8KeyframesMut(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_ptr.__CreateInstance(__ret);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr TpClientContractPropertiesChannelsChannelU8Keyframes(global::unity_states.TpClientContractPropertiesChannelsChannelU8 chan)
        {
            var __arg0 = chan is null ? __IntPtr.Zero : chan.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU8Keyframes(__arg0);
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8_const_ptr.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsChannelU8Drop(global::unity_states.TpClientContractPropertiesChannelsChannelU8 c)
        {
            var __arg0 = c is null ? __IntPtr.Zero : c.__Instance;
            __Internal.TpClientContractPropertiesChannelsChannelU8Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsChannelU8 TpClientContractPropertiesChannelsChannelU8New(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8 v)
        {
            if (ReferenceEquals(v, null))
                throw new global::System.ArgumentNullException("v", "Cannot be null because it is passed by value.");
            var __arg0 = v.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsChannelU8New(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__Internal*) __arg0);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsChannelU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesStatesStateIdI8Drop(global::unity_states.TpClientContractPropertiesStatesStateIdI8 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            __Internal.TpClientContractPropertiesStatesStateIdI8Drop(__arg0);
        }

        public static global::unity_states.TpClientContractContractDataHandle TpClientContractPropertiesStatesStateIdI8Contract(global::unity_states.TpClientContractPropertiesStatesStateIdI8 id)
        {
            var __arg0 = id is null ? __IntPtr.Zero : id.__Instance;
            var __ret = __Internal.TpClientContractPropertiesStatesStateIdI8Contract(__arg0);
            var __result0 = global::unity_states.TpClientContractContractDataHandle.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU8Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU8Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8 TpClientContractPropertiesChannelsRVecKeyframeU8New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU8New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU8Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU8Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 TpClientContractPropertiesChannelsRVecKeyframeU8Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeU8Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeU8Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeU8 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeU8Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeU8Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU8Time(__arg0);
            return __ret;
        }

        public static byte* TpClientContractPropertiesChannelsKeyframeU8Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU8Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeU8Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeU8Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeU8 TpClientContractPropertiesChannelsKeyframeU8New(byte* value, double time)
        {
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeU8New(value, time);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeU8.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI16Push(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16 vec, global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 item)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg1 = item is null ? __IntPtr.Zero : item.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI16Push(__arg0, __arg1);
        }

        public static global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16 TpClientContractPropertiesChannelsRVecKeyframeI16New()
        {
            var __ret = new global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__Internal();
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI16New(new IntPtr(&__ret));
            return global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__CreateInstance(__ret);
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI16Drop(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16 vec)
        {
            if (ReferenceEquals(vec, null))
                throw new global::System.ArgumentNullException("vec", "Cannot be null because it is passed by value.");
            var __arg0 = vec.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI16Drop(*(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16.__Internal*) __arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 TpClientContractPropertiesChannelsRVecKeyframeI16Get(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16 vec, ulong idx)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsRVecKeyframeI16Get(__arg0, idx);
            var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI16.__GetOrCreateInstance(__ret, false);
            return __result0;
        }

        public static void TpClientContractPropertiesChannelsRVecKeyframeI16Set(global::unity_states.Vec_tp_client_contract_properties_channelsKeyframeI16 vec, ulong idx, global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 value)
        {
            var __arg0 = vec is null ? __IntPtr.Zero : vec.__Instance;
            var __arg2 = value is null ? __IntPtr.Zero : value.__Instance;
            __Internal.TpClientContractPropertiesChannelsRVecKeyframeI16Set(__arg0, idx, __arg2);
        }

        public static double TpClientContractPropertiesChannelsKeyframeI16Time(global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI16Time(__arg0);
            return __ret;
        }

        public static short* TpClientContractPropertiesChannelsKeyframeI16Value(global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI16Value(__arg0);
            return __ret;
        }

        public static void TpClientContractPropertiesChannelsKeyframeI16Drop(global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 kf)
        {
            var __arg0 = kf is null ? __IntPtr.Zero : kf.__Instance;
            __Internal.TpClientContractPropertiesChannelsKeyframeI16Drop(__arg0);
        }

        public static global::unity_states.TpClientContractPropertiesChannelsKeyframeI16 TpClientContractPropertiesChannelsKeyframeI16New(ref short value, double time)
        {
            fixed (short* __value0 = &value)
            {
                var __arg0 = __value0;
                var __ret = __Internal.TpClientContractPropertiesChannelsKeyframeI16New(__arg0, time);
                var __result0 = global::unity_states.TpClientContractPropertiesChannelsKeyframeI16.__GetOrCreateInstance(__ret, false);
                return __result0;
            }
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static byte* RsharpBoxU8New(byte value)
        {
            var __ret = __Internal.RsharpBoxU8New(value);
            return __ret;
        }

        public static void RsharpBoxU8Drop(byte* value)
        {
            __Internal.RsharpBoxU8Drop(value);
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static ushort* RsharpBoxU16New(ushort value)
        {
            var __ret = __Internal.RsharpBoxU16New(value);
            return __ret;
        }

        public static void RsharpBoxU16Drop(ref ushort value)
        {
            fixed (ushort* __value0 = &value)
            {
                var __arg0 = __value0;
                __Internal.RsharpBoxU16Drop(__arg0);
            }
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static uint* RsharpBoxU32New(uint value)
        {
            var __ret = __Internal.RsharpBoxU32New(value);
            return __ret;
        }

        public static void RsharpBoxU32Drop(ref uint value)
        {
            fixed (uint* __value0 = &value)
            {
                var __arg0 = __value0;
                __Internal.RsharpBoxU32Drop(__arg0);
            }
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static ulong* RsharpBoxU64New(ulong value)
        {
            var __ret = __Internal.RsharpBoxU64New(value);
            return __ret;
        }

        public static void RsharpBoxU64Drop(ref ulong value)
        {
            fixed (ulong* __value0 = &value)
            {
                var __arg0 = __value0;
                __Internal.RsharpBoxU64Drop(__arg0);
            }
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static sbyte* RsharpBoxI8New(sbyte value)
        {
            var __ret = __Internal.RsharpBoxI8New(value);
            return __ret;
        }

        public static void RsharpBoxI8Drop(sbyte* value)
        {
            __Internal.RsharpBoxI8Drop(value);
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static short* RsharpBoxI16New(short value)
        {
            var __ret = __Internal.RsharpBoxI16New(value);
            return __ret;
        }

        public static void RsharpBoxI16Drop(ref short value)
        {
            fixed (short* __value0 = &value)
            {
                var __arg0 = __value0;
                __Internal.RsharpBoxI16Drop(__arg0);
            }
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static int* RsharpBoxI32New(int value)
        {
            var __ret = __Internal.RsharpBoxI32New(value);
            return __ret;
        }

        public static void RsharpBoxI32Drop(ref int value)
        {
            fixed (int* __value0 = &value)
            {
                var __arg0 = __value0;
                __Internal.RsharpBoxI32Drop(__arg0);
            }
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static long* RsharpBoxI64New(long value)
        {
            var __ret = __Internal.RsharpBoxI64New(value);
            return __ret;
        }

        public static void RsharpBoxI64Drop(ref long value)
        {
            fixed (long* __value0 = &value)
            {
                var __arg0 = __value0;
                __Internal.RsharpBoxI64Drop(__arg0);
            }
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static bool* RsharpBoxBoolNew(bool value)
        {
            var __ret = __Internal.RsharpBoxBoolNew(value);
            return __ret;
        }

        public static void RsharpBoxBoolDrop(ref bool value)
        {
            fixed (bool* __value0 = &value)
            {
                var __arg0 = __value0;
                __Internal.RsharpBoxBoolDrop(__arg0);
            }
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static float* RsharpBoxF32New(float value)
        {
            var __ret = __Internal.RsharpBoxF32New(value);
            return __ret;
        }

        public static void RsharpBoxF32Drop(ref float value)
        {
            fixed (float* __value0 = &value)
            {
                var __arg0 = __value0;
                __Internal.RsharpBoxF32Drop(__arg0);
            }
        }

        /// <summary>Copies `value` into a rust `Box`</summary>
        public static double* RsharpBoxF64New(double value)
        {
            var __ret = __Internal.RsharpBoxF64New(value);
            return __ret;
        }

        public static void RsharpBoxF64Drop(ref double value)
        {
            fixed (double* __value0 = &value)
            {
                var __arg0 = __value0;
                __Internal.RsharpBoxF64Drop(__arg0);
            }
        }
    }
}
